package com.ftn.xml.soap.odgovor;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.1
 * 2021-02-03T17:37:52.021+01:00
 * Generated source version: 3.2.1
 * 
 */
@WebServiceClient(name = "OdgovorZahtevZaIzjasnjenjeService", 
                  wsdlLocation = "classpath:wsdl/odgovor_zahtev_za_izjasnjenje.wsdl",
                  targetNamespace = "http://ftn.uns.ac.rs/izjasnjenje/odgovor") 
public class OdgovorZahtevZaIzjasnjenjeService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://ftn.uns.ac.rs/izjasnjenje/odgovor", "OdgovorZahtevZaIzjasnjenjeService");
    public final static QName OdgovorZahtevZaIzjasnjenjeServiceSoapBinding = new QName("http://ftn.uns.ac.rs/izjasnjenje/odgovor", "OdgovorZahtevZaIzjasnjenjeServiceSoapBinding");
    static {
        URL url = OdgovorZahtevZaIzjasnjenjeService.class.getClassLoader().getResource("wsdl/odgovor_zahtev_za_izjasnjenje.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(OdgovorZahtevZaIzjasnjenjeService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "classpath:wsdl/odgovor_zahtev_za_izjasnjenje.wsdl");
        }       
        WSDL_LOCATION = url;   
    }

    public OdgovorZahtevZaIzjasnjenjeService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public OdgovorZahtevZaIzjasnjenjeService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public OdgovorZahtevZaIzjasnjenjeService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public OdgovorZahtevZaIzjasnjenjeService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public OdgovorZahtevZaIzjasnjenjeService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public OdgovorZahtevZaIzjasnjenjeService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns OdgovorZahtevZaIzjasnjenjeServicePortType
     */
    @WebEndpoint(name = "OdgovorZahtevZaIzjasnjenjeServiceSoapBinding")
    public OdgovorZahtevZaIzjasnjenjeServicePortType getOdgovorZahtevZaIzjasnjenjeServiceSoapBinding() {
        return super.getPort(OdgovorZahtevZaIzjasnjenjeServiceSoapBinding, OdgovorZahtevZaIzjasnjenjeServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns OdgovorZahtevZaIzjasnjenjeServicePortType
     */
    @WebEndpoint(name = "OdgovorZahtevZaIzjasnjenjeServiceSoapBinding")
    public OdgovorZahtevZaIzjasnjenjeServicePortType getOdgovorZahtevZaIzjasnjenjeServiceSoapBinding(WebServiceFeature... features) {
        return super.getPort(OdgovorZahtevZaIzjasnjenjeServiceSoapBinding, OdgovorZahtevZaIzjasnjenjeServicePortType.class, features);
    }

}
